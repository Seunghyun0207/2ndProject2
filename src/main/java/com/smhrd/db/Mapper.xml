<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.smhrd.db.Mapper">
    <!-- 회원가입 -->
    <insert id="insertUser">
        INSERT INTO tb_user (user_id, user_pw, user_name, user_gender, user_age, user_region)
        VALUES (#{userId}, #{userPw}, #{userName}, #{userGender}, #{userAge}, #{userRegion});
    </insert>

    <!-- 로그인 -->
    <select id="loginUser" resultType="com.smhrd.model.UserVO">
        SELECT * FROM tb_user WHERE user_id = #{userId} AND user_pw = #{userPw};
    </select>
    
    <!-- 사용자 정보 조회 -->
    <select id="selectUserById" resultType="com.smhrd.model.UserVO">
        SELECT * FROM tb_user WHERE user_id = #{userId};
    </select>

    <!-- 사용자 정보 수정 -->
    <update id="updateUser">
        UPDATE tb_user
        SET user_pw = #{userPw},
            user_name = #{userName},
            user_region = #{userRegion}
        WHERE user_id = #{userId};
    </update>

    <!-- 사용자 정보 삭제 -->
    <delete id="deleteUser">
        DELETE FROM tb_user WHERE user_id = #{userId};
    </delete>
    
    <!-- 아이디 중복 확인 -->
    <select id="checkDuplicateId" parameterType="String" resultType="int">
        SELECT COUNT(*) FROM tb_user WHERE user_id = #{userId};
    </select>
    


    <!-- 지역에 맞는 모든 모임 가져오기 -->
    <select id="selectAllParties" resultType="com.smhrd.model.PartyVO">
        SELECT * FROM tb_party WHERE party_region = #{userRegion};
    </select>
    
    <!-- 지역에 맞는 모든 모임 가져오기 -->
	<resultMap id="PartyResultMap" type="com.smhrd.model.PartyVO">
	    <result property="partyIdx" column="party_idx"/>
	    <result property="partyNm" column="party_nm"/>
	    <result property="partyInfo" column="party_info"/>
	    <result property="partyRegion" column="party_region"/>
	    <result property="userId" column="user_id"/>
	    <result property="createdAt" column="created_at"/>
	</resultMap>
	
	<select id="selectPartiesByRegion" resultMap="PartyResultMap">
	    SELECT party_idx, party_nm, CAST(party_info AS CHAR) AS party_info, party_region, 
	           user_id, created_at
	    FROM tb_party
	    WHERE party_region = #{userRegion};
	</select>
	
    <!-- 내가 가입한 모임 가져오기 -->
	<select id="selectMyParties" resultMap="PartyResultMap">
	    SELECT party_idx, party_nm, party_region, user_id, created_at
	    FROM tb_party
	    WHERE user_id = #{userId}
	</select>
    
    <!-- 모임 상세정보 -->
    <select id="selectPartyByIdx" resultMap="PartyResultMap">
	    SELECT party_idx, party_nm, party_info, party_region, 
	           party_file, user_id, created_at
	    FROM tb_party
	    WHERE party_idx = #{partyIdx};
	</select>

    <!-- 모임 방 생성 -->
	<insert id="insertParty" useGeneratedKeys="true" keyProperty="partyIdx">
	    INSERT INTO tb_party (party_nm, party_info, party_region, party_file, user_id)
	    VALUES (#{partyNm}, #{partyInfo}, #{partyRegion}, #{partyFile}, #{userId});
	</insert>
    
    <!-- 특정 모임 방 정보 가져오기 -->
	<select id="selectPartyById" resultMap="PartyResultMap">
	    SELECT party_idx, party_nm, CAST(party_info AS CHAR) AS party_info, party_region, 
	           party_file, user_id, created_at
	    FROM tb_party
	    WHERE party_idx = #{partyIdx};
	</select>

    <!-- 모임 방 가입된 회원 수 가져오기 -->
    <select id="getMemberCount" resultType="int">
        SELECT COUNT(*) 
        FROM tb_joning
        WHERE party_idx = #{partyIdx};
    </select>
    
    <!-- 모임 방 수정 -->
    <update id="updateParty">
        UPDATE tb_party
        SET party_nm = #{partyNm},
            party_info = #{partyInfo},
            party_region = #{partyRegion},
            party_file = #{partyFile}
        WHERE party_idx = #{partyIdx} AND user_id = #{userId};
    </update>

    <!-- 모임 방 삭제 -->
    <delete id="deleteParty">
        DELETE FROM tb_party
        WHERE party_idx = #{partyIdx} AND user_id = #{userId};
    </delete>
    
    
    
    <!-- 게시글 생성 -->
    <insert id="insertPost">
        INSERT INTO tb_party_post (p_post_nm, p_post_content, p_post_file, user_id, party_idx)
        VALUES (#{postNm}, #{postContent}, #{postFile}, #{userId}, #{partyIdx});
    </insert>
    
    <!-- 게시글 수정 -->
    <update id="updatePost">
        UPDATE tb_party_post
        SET p_post_nm = #{postNm},
            p_post_content = #{postContent},
            p_post_file = #{postFile}
        WHERE p_post_idx = #{postIdx} AND user_id = #{userId};
    </update>

    <!-- 게시글 삭제 -->
    <delete id="deletePost">
        DELETE FROM tb_party_post
        WHERE p_post_idx = #{postIdx} AND user_id = #{userId};
    </delete>
    
    
    
    <!-- 댓글 생성 -->
    <insert id="insertComment">
        INSERT INTO tb_party_comment (p_cmt_content, user_id, p_post_idx)
        VALUES (#{cmtContent}, #{userId}, #{postIdx});
    </insert>
    
    <!-- 댓글 수정 -->
    <update id="updateComment">
        UPDATE tb_party_comment
        SET p_cmt_content = #{cmtContent}
        WHERE p_cmt_idx = #{cmtIdx} AND user_id = #{userId};
    </update>

    <!-- 댓글 삭제 -->
    <delete id="deleteComment">
        DELETE FROM tb_party_comment
        WHERE p_cmt_idx = #{cmtIdx} AND user_id = #{userId};
    </delete>
    
    <!--  최신글 불러오기 -->
    <select id="selectLatestPostsByParty" resultType="com.smhrd.model.PostVO">
	    SELECT post_idx, post_nm, post_content, post_file, created_at, user_id
	    FROM tb_party_post
	    WHERE party_idx = #{partyIdx}
	    ORDER BY created_at DESC
	    LIMIT 5;
	</select>
	
	<!-- 신청 정보 저장 -->
    <insert id="insertJoinRequest" parameterType="com.smhrd.model.JoinRequestVO">
        INSERT INTO tb_joning (party_idx, user_id, join_intro, agree_yn)
        VALUES (#{partyIdx}, #{userId}, #{joinIntro}, #{agreeYn});
    </insert>

    <!-- 특정 방의 신청자 정보 조회 -->
    <select id="selectJoinRequestsByPartyIdx" resultType="com.smhrd.model.JoinRequestVO">
        SELECT user_id, join_intro, agree_yn
        FROM tb_joning
        WHERE party_idx = #{partyIdx};
    </select>
    
    <!-- 신청 가입 수락 및 변경 -->
    <update id="updateJoinRequestStatus">
	    UPDATE tb_joning
	    SET agree_yn = #{agreeYn}
	    WHERE party_idx = #{partyIdx} AND user_id = #{userId};
	</update>
	
	<!-- 회원 목록을 가져오기 -->
	<resultMap id="UserResultMap" type="com.smhrd.model.UserVO">
	    <result property="userId" column="user_id" />
	    <result property="userName" column="user_name" />
	</resultMap>

	<select id="selectMembersByPartyIdx" resultMap="UserResultMap">
	    SELECT u.user_id, u.user_name
	    FROM tb_user u
	    JOIN tb_joning j ON u.user_id = j.user_id
	    WHERE j.party_idx = #{partyIdx};
	</select>
	
	<!-- 자기소개글 조회 -->
	<select id="selectJoinIntroByPartyIdx" resultType="String">
	    SELECT join_intro
	    FROM tb_joning
	    WHERE party_idx = #{partyIdx};
	</select>
	
	<!-- 특정 모임의 가입 신청 목록 가져오기 -->
	<select id="selectPendingJoinRequests" resultType="com.smhrd.model.JoinRequestVO">
	    SELECT join_idx, user_id, join_intro, agree_yn
	    FROM tb_joning
	    WHERE party_idx = #{partyIdx} AND agree_yn = 'n';
	</select>
	
	<!-- 가입 신청 수락 -->
	<update id="updateAgreeStatus">
	    UPDATE tb_joning
	    SET agree_yn = 'y'
	    WHERE join_idx = #{joinIdx};
	</update>
	
	<!-- 가입 신청 거절 -->
	<delete id="deleteJoinRequest">
	    DELETE FROM tb_joning
	    WHERE join_idx = #{joinIdx};
	</delete>
</mapper>